version: "3.9"
services:
  frontend:
    build:
      context: ./frontApp
      dockerfile: Dockerfile
    tty: true
    ports:
      - "4173:4173"
      - "5173:5173"
    volumes:
      - ./frontApp/vul-app-front:/usr/src/app
    restart: always
    networks:
      vul-net:
        ipv4_address: 192.168.100.5

  backend:
    build:
      context: ./vulApp
      dockerfile: Dockerfile
    tty: true
    ports:
      - "9000:9000"
    volumes:
      - ./vulApp/src:/usr/src/app
    restart: always
    networks:
      vul-net:
        ipv4_address: 192.168.100.10
    # depends_on:
    #   - db

  # db:
  #   build:
  #     context: ./db
  #     dockerfile: Dockerfile
  #   tty: true
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - ./db/data:/var/lib/postgresql/data
  #     - ./db/init:/docker-entrypoint-initdb.d
  #   environment:
  #     - POSTGRES_USER=${POSTGRES_USER}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #     - POSTGRES_DB=${POSTGRES_DB}
  #     - POSTGRES_ROOT_PASSWORD=${POSTGRES_ROOT_PASSWORD}
  #   restart: always
  #   networks:
  #     vul-net:
  #       ipv4_address: 192.168.100.20

  lb:
    build:
      context: ./lb
      dockerfile: Dockerfile
    tty: true
    ports:
      - "8080:8080"
    volumes:
      - ./lb:/usr/share/nginx/html
      - ./lb/config/nginx.conf:/etc/nginx.conf
      - ./lb/nginx:/var/www/html
    restart: always
    networks:
      vul-net:
        ipv4_address: 192.168.100.50

networks:
  vul-net:
    ipam:
      driver: default
      config:
        - subnet: 192.168.100.0/24